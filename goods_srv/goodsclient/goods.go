// Code generated by goctl. DO NOT EDIT.
// Source: goods.proto

package goodsclient

import (
	"context"

	"goods_srv/pb/goods"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddGoodsReq      = goods.AddGoodsReq
	AddGoodsResp     = goods.AddGoodsResp
	DelGoodsReq      = goods.DelGoodsReq
	DelGoodsResp     = goods.DelGoodsResp
	GetGoodsByIdReq  = goods.GetGoodsByIdReq
	GetGoodsByIdResp = goods.GetGoodsByIdResp
	Goods            = goods.Goods
	SearchGoodsReq   = goods.SearchGoodsReq
	SearchGoodsResp  = goods.SearchGoodsResp
	UpdateGoodsReq   = goods.UpdateGoodsReq
	UpdateGoodsResp  = goods.UpdateGoodsResp

	GoodsZrpcClient interface {
		// -----------------------goods-----------------------
		AddGoods(ctx context.Context, in *AddGoodsReq, opts ...grpc.CallOption) (*AddGoodsResp, error)
		UpdateGoods(ctx context.Context, in *UpdateGoodsReq, opts ...grpc.CallOption) (*UpdateGoodsResp, error)
		DelGoods(ctx context.Context, in *DelGoodsReq, opts ...grpc.CallOption) (*DelGoodsResp, error)
		GetGoodsById(ctx context.Context, in *GetGoodsByIdReq, opts ...grpc.CallOption) (*GetGoodsByIdResp, error)
		SearchGoods(ctx context.Context, in *SearchGoodsReq, opts ...grpc.CallOption) (*SearchGoodsResp, error)
	}

	defaultGoodsZrpcClient struct {
		cli zrpc.Client
	}
)

func NewGoodsZrpcClient(cli zrpc.Client) GoodsZrpcClient {
	return &defaultGoodsZrpcClient{
		cli: cli,
	}
}

// -----------------------goods-----------------------
func (m *defaultGoodsZrpcClient) AddGoods(ctx context.Context, in *AddGoodsReq, opts ...grpc.CallOption) (*AddGoodsResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.AddGoods(ctx, in, opts...)
}

func (m *defaultGoodsZrpcClient) UpdateGoods(ctx context.Context, in *UpdateGoodsReq, opts ...grpc.CallOption) (*UpdateGoodsResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.UpdateGoods(ctx, in, opts...)
}

func (m *defaultGoodsZrpcClient) DelGoods(ctx context.Context, in *DelGoodsReq, opts ...grpc.CallOption) (*DelGoodsResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.DelGoods(ctx, in, opts...)
}

func (m *defaultGoodsZrpcClient) GetGoodsById(ctx context.Context, in *GetGoodsByIdReq, opts ...grpc.CallOption) (*GetGoodsByIdResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.GetGoodsById(ctx, in, opts...)
}

func (m *defaultGoodsZrpcClient) SearchGoods(ctx context.Context, in *SearchGoodsReq, opts ...grpc.CallOption) (*SearchGoodsResp, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.SearchGoods(ctx, in, opts...)
}
